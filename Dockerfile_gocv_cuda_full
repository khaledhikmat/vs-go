# Use official NVIDIA CUDA base image with Ubuntu
FROM nvidia/cuda:12.2.0-runtime-ubuntu20.04

# Install base tools
RUN apt-get update && apt-get install -y \
    build-essential cmake git wget unzip pkg-config \
    libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev \
    libv4l-dev libxvidcore-dev libx264-dev \
    libjpeg-dev libpng-dev libtiff-dev gfortran openexr \
    libatlas-base-dev python3-dev python3-numpy \
    libtbb2 libtbb-dev libdc1394-22-dev \
    golang-go

# Set Go environment
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH

# Install GoCV dependencies
RUN mkdir -p /go/src/gocv.io/x
WORKDIR /go/src/gocv.io/x

# Install OpenCV with CUDA
RUN git clone https://github.com/opencv/opencv.git && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd opencv && git checkout 4.8.0 && \
    cd ../opencv_contrib && git checkout 4.8.0 && \
    cd ../opencv && mkdir build && cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
          -D WITH_CUDA=ON \
          -D ENABLE_FAST_MATH=1 \
          -D CUDA_FAST_MATH=1 \
          -D WITH_CUBLAS=1 \
          -D BUILD_opencv_cudacodec=ON \
          -D WITH_CUDNN=ON \
          -D OPENCV_DNN_CUDA=ON \
          .. && \
    make -j"$(nproc)" && make install && ldconfig

# Install GoCV
RUN git clone https://github.com/hybridgroup/gocv.git && \
    cd gocv && make install

# Set working directory for your Go app
WORKDIR /app

# Copy your Go application
COPY . .

# Build your Go app
RUN go mod tidy
RUN go build -o app .

# Run your Go app
CMD ["./app"]
