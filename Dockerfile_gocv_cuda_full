
FROM nvidia/cuda:11.8.0-devel-ubuntu22.04

# Install Go + Build tools + Git + OpenCV deps
RUN apt-get update && apt-get install -y \
  wget curl git build-essential cmake pkg-config \
  libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
  libx264-dev libxvidcore-dev libjpeg-dev libpng-dev libtiff-dev \
  gfortran openexr libatlas-base-dev python3-dev python3-numpy \
  libtbb2 libtbb-dev libdc1394-22-dev ffmpeg \
  libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
  libnpp-dev && \
  rm -rf /var/lib/apt/lists/*

# Install Go manually
ENV GO_VERSION=1.21.5
RUN curl -OL https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && \
    rm go${GO_VERSION}.linux-amd64.tar.gz
ENV PATH=$PATH:/usr/local/go/bin

# Clone and patch GoCV
WORKDIR /opt
RUN git clone https://github.com/hybridgroup/gocv.git
WORKDIR /opt/gocv

# Patch Makefile: remove sudo, force cmake to generate opencv4.pc
RUN sed -i 's/sudo //g' Makefile && \
    sed -i 's|cmake ..|cmake -D OPENCV_GENERATE_PKGCONFIG=ON ..|' Makefile

# Set pkg-config search path
ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig

# Build and install GoCV with CUDA
RUN make install_cuda

# Check for opencv4.pc file existence
RUN find /usr/local -name "opencv4.pc" || echo "opencv4.pc not found"

# Prepare workspace and copy your Go code
WORKDIR /app
COPY . .

# Build your app
RUN go mod tidy && go build -o app .

# Runtime settings
ENV LD_LIBRARY_PATH=/usr/local/lib
CMD ["./app"]
