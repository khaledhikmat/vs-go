
# Stage 1: Build the Go application
FROM golang:latest as builder

# Install OpenCV dependencies
RUN apt update && apt install -y \
  build-essential cmake git pkg-config libgtk-3-dev \
  libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
  libx264-dev libxvidcore-dev libjpeg-dev libpng-dev libtiff-dev \
  gfortran openexr libatlas-base-dev python3-dev python3-numpy \
  libtbb2 libtbb-dev libdc1394-22-dev libgstreamer1.0-dev \
  libgstreamer-plugins-base1.0-dev ffmpeg

# Clone and build OpenCV
WORKDIR /opt
RUN git clone https://github.com/opencv/opencv.git && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd opencv && git checkout 4.8.0 && \
    cd ../opencv_contrib && git checkout 4.8.0 && \
    cd ../opencv && mkdir -p build && cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
          -D WITH_FFMPEG=ON \
          -D WITH_GSTREAMER=ON \
          -D WITH_TBB=ON \
          -D WITH_V4L=ON \
          -D BUILD_opencv_python3=OFF \
          -D OPENCV_GENERATE_PKGCONFIG=ON \
          .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# Install GoCV bindings
RUN go install -v gocv.io/x/gocv@latest

# Copy your Go app source code
WORKDIR /app
COPY . .

# Build your Go application
RUN go build -o app main.go

# Stage 2: Minimal runtime image
FROM ubuntu:22.04

# Install runtime dependencies
RUN apt update && apt install -y \
  libgtk-3-0 libavcodec58 libavformat58 libswscale5 libv4l-0 \
  libx264-160 libxvidcore4 libjpeg8 libpng16-16 libtiff5 \
  libtbb2 libdc1394-22 libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 ffmpeg && \
  rm -rf /var/lib/apt/lists/*

# Copy built binary and OpenCV libs
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app/app /app/app

ENV LD_LIBRARY_PATH=/usr/local/lib

WORKDIR /app
CMD ["./app"]
